#定义python函数

import math

def move(x, y, step, angle=0):
	nx = x + step * math.cos(angle)
	ny = y - step * math.sin(angle)
	return nx, ny

x, y = move(100, 100, 60, math.pi / 6)
print x, y

小结：

定义函数时，需要确定函数名和参数个数；

如果有必要，可以先对参数的数据类型做检查；

函数体内部可以用return随时返回函数结果；

函数执行完毕也没有return语句时，自动return None。

函数可以同时返回多个值，但其实就是一个tuple。


def power(x, n):
	s = 1
	while n>0:
		n=n-1
		s=s*x
	return s

print power(5,3)

#定义一个函数，传入一个list，添加一个END再返回：
def add_end(L=[]):
	L.append('END')
	return L

print add_end([1, 2, 3])
print add_end(['x', 'y', 'z'])

#可变参数，加*
def calc(numbers):
	sum = 0
	for n in numbers:
		sum = sum + n * n
	return sum

print calc([1, 2, 3])
print calc((1, 3, 5, 7))

def calc(*numbers):
	sum = 0
	for n in numbers:
		sum = sum + n * n
	return sum

print calc([1, 2, 3])
print calc((1, 3, 5, 7))


关键字参数，加**
def person(name, age, **kw):
	print 'name:', name, 'age:', age, 'other:', kw

print person('Michael', 30)
print person('Bob', 35, city='Beijing')
print person('Adam', 45, gender='M', job='Engineer')

参数组合
参数定义的顺序必须是：必选参数/默认参数/可变参数和关键字参数


小结
Python的函数具有非常灵活的参数形态，既可以实现简单的调用，又可以传入非常复杂的参数。

默认参数一定要用不可变对象，如果是可变对象，运行会有逻辑错误！

要注意定义可变参数和关键字参数的语法：

*args是可变参数，args接收的是一个tuple；

**kw是关键字参数，kw接收的是一个dict。

以及调用函数时如何传入可变参数和关键字参数的语法：

可变参数既可以直接传入：func(1, 2, 3)，又可以先组装list或tuple，再通过*args传入：func(*(1, 2, 3))；

关键字参数既可以直接传入：func(a=1, b=2)，又可以先组装dict，再通过**kw传入：func(**{'a': 1, 'b': 2})。

使用*args和**kw是Python的习惯写法，当然也可以用其他参数名，但最好使用习惯用法。
